"0","random.test.index = sample(1:nrow(data), size = 250, replace = FALSE)"
"0",""
"0","predict(linear.model, data[random.test.index, ])"
"1","  [1]"
"1","  1"
"1","  1"
"1","  1"
"1"," -1"
"1"," -1"
"1","  1"
"1","  1"
"1","  1"
"1"," -1"
"1","  1"
"1"," -1"
"1"," -1"
"1","  1"
"1","  1"
"1","  1"
"1","  1"
"1","  1"
"1","  1"
"1"," -1"
"1","  1"
"1","  1"
"1","  1"
"1"," -1"
"1"," -1"
"1","  1"
"1"," -1"
"1","  1"
"1"," -1"
"1","  1"
"1","  1"
"1","  1"
"1"," -1"
"1"," -1"
"1"," -1"
"1","  1"
"1"," -1"
"1","  1"
"1"," -1"
"1","  1"
"1","  1"
"1"," -1"
"1","  1"
"1"," -1"
"1"," -1"
"1"," -1"
"1"," -1"
"1"," -1"
"1","  1"
"1","  1"
"1","
"
"1"," [50]"
"1"," -1"
"1","  1"
"1","  1"
"1"," -1"
"1","  1"
"1","  1"
"1","  1"
"1","  1"
"1"," -1"
"1"," -1"
"1","  1"
"1","  1"
"1"," -1"
"1","  1"
"1"," -1"
"1"," -1"
"1","  1"
"1"," -1"
"1","  1"
"1"," -1"
"1"," -1"
"1","  1"
"1"," -1"
"1"," -1"
"1"," -1"
"1","  1"
"1"," -1"
"1"," -1"
"1"," -1"
"1","  1"
"1","  1"
"1","  1"
"1"," -1"
"1"," -1"
"1"," -1"
"1"," -1"
"1","  1"
"1","  1"
"1","  1"
"1","  1"
"1","  1"
"1","  1"
"1","  1"
"1","  1"
"1"," -1"
"1","  1"
"1","  1"
"1","  1"
"1","  1"
"1","
"
"1"," [99]"
"1"," -1"
"1","  1"
"1"," -1"
"1","  1"
"1","  1"
"1","  1"
"1"," -1"
"1"," -1"
"1","  1"
"1"," -1"
"1","  1"
"1"," -1"
"1","  1"
"1"," -1"
"1","  1"
"1"," -1"
"1"," -1"
"1"," -1"
"1"," -1"
"1"," -1"
"1","  1"
"1","  1"
"1","  1"
"1"," -1"
"1","  1"
"1","  1"
"1"," -1"
"1","  1"
"1"," -1"
"1"," -1"
"1","  1"
"1"," -1"
"1","  1"
"1"," -1"
"1"," -1"
"1"," -1"
"1"," -1"
"1","  1"
"1","  1"
"1","  1"
"1"," -1"
"1","  1"
"1","  1"
"1","  1"
"1","  1"
"1","  1"
"1"," -1"
"1"," -1"
"1","  1"
"1","
"
"1","[148]"
"1"," -1"
"1"," -1"
"1","  1"
"1","  1"
"1","  1"
"1","  1"
"1"," -1"
"1","  1"
"1","  1"
"1","  1"
"1","  1"
"1"," -1"
"1"," -1"
"1","  1"
"1","  1"
"1"," -1"
"1","  1"
"1"," -1"
"1","  1"
"1"," -1"
"1"," -1"
"1","  1"
"1","  1"
"1"," -1"
"1","  1"
"1"," -1"
"1","  1"
"1"," -1"
"1","  1"
"1","  1"
"1","  1"
"1","  1"
"1","  1"
"1"," -1"
"1","  1"
"1","  1"
"1"," -1"
"1","  1"
"1"," -1"
"1","  1"
"1"," -1"
"1"," -1"
"1"," -1"
"1","  1"
"1","  1"
"1","  1"
"1","  1"
"1"," -1"
"1"," -1"
"1","
"
"1","[197]"
"1","  1"
"1","  1"
"1"," -1"
"1"," -1"
"1"," -1"
"1","  1"
"1"," -1"
"1","  1"
"1"," -1"
"1","  1"
"1"," -1"
"1","  1"
"1","  1"
"1","  1"
"1"," -1"
"1","  1"
"1"," -1"
"1","  1"
"1","  1"
"1"," -1"
"1"," -1"
"1","  1"
"1"," -1"
"1"," -1"
"1"," -1"
"1","  1"
"1","  1"
"1"," -1"
"1"," -1"
"1","  1"
"1"," -1"
"1","  1"
"1","  1"
"1"," -1"
"1","  1"
"1","  1"
"1","  1"
"1","  1"
"1","  1"
"1","  1"
"1"," -1"
"1","  1"
"1","  1"
"1","  1"
"1","  1"
"1","  1"
"1","  1"
"1","  1"
"1","  1"
"1","
"
"1","[246]"
"1","  1"
"1","  1"
"1"," -1"
"1","  1"
"1"," -1"
"1","
"
"0","test_accuracy(linear.model, data[random.test.index, ], label[random.test.index])"
"1","[1]"
"1"," 0.784"
"1","
"
"0","predict(linear.model.partial, data[random.test.index, ])"
"1","  [1]"
"1","  1"
"1","  1"
"1","  1"
"1","  1"
"1"," -1"
"1","  1"
"1","  1"
"1","  1"
"1","  1"
"1","  1"
"1"," -1"
"1"," -1"
"1","  1"
"1","  1"
"1","  1"
"1","  1"
"1","  1"
"1","  1"
"1"," -1"
"1","  1"
"1","  1"
"1","  1"
"1","  1"
"1"," -1"
"1","  1"
"1"," -1"
"1","  1"
"1","  1"
"1","  1"
"1","  1"
"1","  1"
"1"," -1"
"1"," -1"
"1"," -1"
"1","  1"
"1"," -1"
"1","  1"
"1"," -1"
"1","  1"
"1","  1"
"1"," -1"
"1","  1"
"1"," -1"
"1","  1"
"1"," -1"
"1"," -1"
"1"," -1"
"1","  1"
"1","  1"
"1","
"
"1"," [50]"
"1"," -1"
"1","  1"
"1","  1"
"1"," -1"
"1","  1"
"1","  1"
"1","  1"
"1","  1"
"1"," -1"
"1"," -1"
"1","  1"
"1","  1"
"1"," -1"
"1","  1"
"1"," -1"
"1"," -1"
"1","  1"
"1"," -1"
"1","  1"
"1"," -1"
"1"," -1"
"1","  1"
"1"," -1"
"1"," -1"
"1","  1"
"1","  1"
"1"," -1"
"1"," -1"
"1"," -1"
"1","  1"
"1","  1"
"1","  1"
"1"," -1"
"1"," -1"
"1"," -1"
"1"," -1"
"1","  1"
"1","  1"
"1","  1"
"1"," -1"
"1","  1"
"1","  1"
"1","  1"
"1","  1"
"1"," -1"
"1","  1"
"1","  1"
"1","  1"
"1","  1"
"1","
"
"1"," [99]"
"1","  1"
"1","  1"
"1"," -1"
"1","  1"
"1","  1"
"1","  1"
"1"," -1"
"1","  1"
"1"," -1"
"1"," -1"
"1","  1"
"1"," -1"
"1","  1"
"1"," -1"
"1","  1"
"1","  1"
"1"," -1"
"1"," -1"
"1"," -1"
"1"," -1"
"1","  1"
"1"," -1"
"1","  1"
"1"," -1"
"1","  1"
"1","  1"
"1"," -1"
"1","  1"
"1"," -1"
"1"," -1"
"1","  1"
"1","  1"
"1","  1"
"1","  1"
"1"," -1"
"1","  1"
"1"," -1"
"1","  1"
"1","  1"
"1","  1"
"1"," -1"
"1"," -1"
"1","  1"
"1"," -1"
"1","  1"
"1"," -1"
"1","  1"
"1"," -1"
"1"," -1"
"1","
"
"1","[148]"
"1"," -1"
"1","  1"
"1","  1"
"1","  1"
"1","  1"
"1","  1"
"1"," -1"
"1","  1"
"1","  1"
"1","  1"
"1","  1"
"1"," -1"
"1"," -1"
"1","  1"
"1","  1"
"1"," -1"
"1","  1"
"1","  1"
"1","  1"
"1"," -1"
"1"," -1"
"1","  1"
"1","  1"
"1"," -1"
"1","  1"
"1"," -1"
"1","  1"
"1"," -1"
"1","  1"
"1","  1"
"1"," -1"
"1","  1"
"1","  1"
"1"," -1"
"1"," -1"
"1","  1"
"1"," -1"
"1","  1"
"1"," -1"
"1","  1"
"1"," -1"
"1"," -1"
"1"," -1"
"1","  1"
"1","  1"
"1","  1"
"1","  1"
"1"," -1"
"1"," -1"
"1","
"
"1","[197]"
"1","  1"
"1","  1"
"1"," -1"
"1","  1"
"1"," -1"
"1","  1"
"1","  1"
"1","  1"
"1"," -1"
"1"," -1"
"1"," -1"
"1","  1"
"1","  1"
"1","  1"
"1"," -1"
"1","  1"
"1"," -1"
"1","  1"
"1","  1"
"1"," -1"
"1"," -1"
"1","  1"
"1"," -1"
"1"," -1"
"1"," -1"
"1","  1"
"1","  1"
"1"," -1"
"1"," -1"
"1","  1"
"1"," -1"
"1"," -1"
"1","  1"
"1"," -1"
"1","  1"
"1","  1"
"1","  1"
"1"," -1"
"1","  1"
"1","  1"
"1"," -1"
"1","  1"
"1","  1"
"1","  1"
"1","  1"
"1","  1"
"1","  1"
"1","  1"
"1","  1"
"1","
"
"1","[246]"
"1","  1"
"1"," -1"
"1"," -1"
"1"," -1"
"1","  1"
"1","
"
"0","test_accuracy(linear.model.partial, data[random.test.index, ], label[random.test.index])"
"1","[1]"
"1"," 0.776"
"1","
"
"0","predict(poly.model, data[random.test.index, ])"
"1","  [1]"
"1","  1"
"1","  1"
"1","  1"
"1"," -1"
"1"," -1"
"1","  1"
"1","  1"
"1"," -1"
"1"," -1"
"1"," -1"
"1","  1"
"1"," -1"
"1","  1"
"1"," -1"
"1","  1"
"1","  1"
"1"," -1"
"1","  1"
"1"," -1"
"1","  1"
"1","  1"
"1","  1"
"1","  1"
"1"," -1"
"1"," -1"
"1"," -1"
"1"," -1"
"1"," -1"
"1"," -1"
"1","  1"
"1","  1"
"1"," -1"
"1"," -1"
"1","  1"
"1","  1"
"1"," -1"
"1","  1"
"1"," -1"
"1","  1"
"1","  1"
"1"," -1"
"1","  1"
"1"," -1"
"1"," -1"
"1"," -1"
"1"," -1"
"1"," -1"
"1","  1"
"1"," -1"
"1","
"
"1"," [50]"
"1"," -1"
"1","  1"
"1"," -1"
"1"," -1"
"1"," -1"
"1"," -1"
"1"," -1"
"1","  1"
"1","  1"
"1"," -1"
"1","  1"
"1"," -1"
"1"," -1"
"1","  1"
"1"," -1"
"1"," -1"
"1"," -1"
"1"," -1"
"1"," -1"
"1"," -1"
"1"," -1"
"1"," -1"
"1"," -1"
"1"," -1"
"1"," -1"
"1"," -1"
"1","  1"
"1"," -1"
"1"," -1"
"1"," -1"
"1","  1"
"1"," -1"
"1"," -1"
"1"," -1"
"1"," -1"
"1"," -1"
"1"," -1"
"1"," -1"
"1","  1"
"1"," -1"
"1"," -1"
"1"," -1"
"1","  1"
"1"," -1"
"1"," -1"
"1"," -1"
"1"," -1"
"1"," -1"
"1","  1"
"1","
"
"1"," [99]"
"1","  1"
"1"," -1"
"1"," -1"
"1","  1"
"1","  1"
"1","  1"
"1"," -1"
"1"," -1"
"1"," -1"
"1"," -1"
"1"," -1"
"1"," -1"
"1"," -1"
"1"," -1"
"1","  1"
"1"," -1"
"1"," -1"
"1"," -1"
"1"," -1"
"1"," -1"
"1","  1"
"1"," -1"
"1"," -1"
"1"," -1"
"1","  1"
"1","  1"
"1"," -1"
"1"," -1"
"1"," -1"
"1"," -1"
"1"," -1"
"1"," -1"
"1"," -1"
"1"," -1"
"1"," -1"
"1"," -1"
"1","  1"
"1","  1"
"1","  1"
"1"," -1"
"1","  1"
"1"," -1"
"1","  1"
"1"," -1"
"1"," -1"
"1"," -1"
"1"," -1"
"1"," -1"
"1"," -1"
"1","
"
"1","[148]"
"1"," -1"
"1","  1"
"1","  1"
"1"," -1"
"1","  1"
"1"," -1"
"1"," -1"
"1"," -1"
"1","  1"
"1","  1"
"1","  1"
"1"," -1"
"1"," -1"
"1","  1"
"1"," -1"
"1"," -1"
"1"," -1"
"1"," -1"
"1"," -1"
"1"," -1"
"1"," -1"
"1","  1"
"1"," -1"
"1"," -1"
"1","  1"
"1"," -1"
"1","  1"
"1"," -1"
"1"," -1"
"1","  1"
"1"," -1"
"1"," -1"
"1","  1"
"1"," -1"
"1","  1"
"1"," -1"
"1"," -1"
"1","  1"
"1"," -1"
"1","  1"
"1"," -1"
"1"," -1"
"1"," -1"
"1","  1"
"1"," -1"
"1","  1"
"1","  1"
"1"," -1"
"1"," -1"
"1","
"
"1","[197]"
"1","  1"
"1","  1"
"1"," -1"
"1"," -1"
"1"," -1"
"1","  1"
"1"," -1"
"1"," -1"
"1"," -1"
"1"," -1"
"1"," -1"
"1","  1"
"1","  1"
"1"," -1"
"1"," -1"
"1"," -1"
"1"," -1"
"1","  1"
"1","  1"
"1"," -1"
"1"," -1"
"1","  1"
"1"," -1"
"1"," -1"
"1","  1"
"1"," -1"
"1"," -1"
"1"," -1"
"1"," -1"
"1","  1"
"1"," -1"
"1"," -1"
"1","  1"
"1"," -1"
"1","  1"
"1"," -1"
"1"," -1"
"1","  1"
"1","  1"
"1"," -1"
"1"," -1"
"1"," -1"
"1","  1"
"1"," -1"
"1","  1"
"1","  1"
"1"," -1"
"1"," -1"
"1","  1"
"1","
"
"1","[246]"
"1","  1"
"1","  1"
"1"," -1"
"1"," -1"
"1"," -1"
"1","
"
"0","test_accuracy(poly.model, data[random.test.index, ], label[random.test.index])"
"1","[1]"
"1"," 0.656"
"1","
"
"0","predict(rbf.model, data[random.test.index, ])"
"1","  [1]"
"1","  1"
"1","  1"
"1","  1"
"1","  1"
"1"," -1"
"1","  1"
"1","  1"
"1","  1"
"1","  1"
"1","  1"
"1"," -1"
"1"," -1"
"1","  1"
"1","  1"
"1","  1"
"1","  1"
"1","  1"
"1","  1"
"1"," -1"
"1","  1"
"1","  1"
"1","  1"
"1"," -1"
"1"," -1"
"1","  1"
"1"," -1"
"1"," -1"
"1","  1"
"1","  1"
"1","  1"
"1","  1"
"1"," -1"
"1"," -1"
"1"," -1"
"1","  1"
"1"," -1"
"1","  1"
"1"," -1"
"1","  1"
"1","  1"
"1"," -1"
"1","  1"
"1"," -1"
"1"," -1"
"1"," -1"
"1","  1"
"1"," -1"
"1","  1"
"1","  1"
"1","
"
"1"," [50]"
"1"," -1"
"1","  1"
"1","  1"
"1"," -1"
"1","  1"
"1","  1"
"1","  1"
"1","  1"
"1"," -1"
"1","  1"
"1","  1"
"1","  1"
"1"," -1"
"1","  1"
"1"," -1"
"1"," -1"
"1","  1"
"1"," -1"
"1","  1"
"1"," -1"
"1"," -1"
"1","  1"
"1"," -1"
"1"," -1"
"1"," -1"
"1","  1"
"1"," -1"
"1"," -1"
"1"," -1"
"1","  1"
"1","  1"
"1","  1"
"1"," -1"
"1"," -1"
"1"," -1"
"1","  1"
"1","  1"
"1","  1"
"1","  1"
"1","  1"
"1","  1"
"1","  1"
"1","  1"
"1","  1"
"1"," -1"
"1","  1"
"1","  1"
"1","  1"
"1","  1"
"1","
"
"1"," [99]"
"1","  1"
"1"," -1"
"1"," -1"
"1","  1"
"1","  1"
"1","  1"
"1"," -1"
"1"," -1"
"1"," -1"
"1","  1"
"1","  1"
"1"," -1"
"1","  1"
"1"," -1"
"1","  1"
"1"," -1"
"1"," -1"
"1"," -1"
"1"," -1"
"1","  1"
"1","  1"
"1","  1"
"1","  1"
"1"," -1"
"1","  1"
"1","  1"
"1"," -1"
"1","  1"
"1"," -1"
"1","  1"
"1","  1"
"1"," -1"
"1","  1"
"1"," -1"
"1","  1"
"1"," -1"
"1"," -1"
"1","  1"
"1","  1"
"1","  1"
"1"," -1"
"1","  1"
"1","  1"
"1","  1"
"1","  1"
"1","  1"
"1","  1"
"1"," -1"
"1","  1"
"1","
"
"1","[148]"
"1"," -1"
"1"," -1"
"1","  1"
"1","  1"
"1","  1"
"1","  1"
"1"," -1"
"1","  1"
"1","  1"
"1","  1"
"1","  1"
"1"," -1"
"1"," -1"
"1","  1"
"1","  1"
"1"," -1"
"1","  1"
"1","  1"
"1","  1"
"1"," -1"
"1"," -1"
"1","  1"
"1","  1"
"1"," -1"
"1","  1"
"1","  1"
"1","  1"
"1"," -1"
"1","  1"
"1","  1"
"1","  1"
"1","  1"
"1","  1"
"1"," -1"
"1","  1"
"1","  1"
"1"," -1"
"1","  1"
"1"," -1"
"1","  1"
"1","  1"
"1"," -1"
"1"," -1"
"1","  1"
"1","  1"
"1","  1"
"1","  1"
"1"," -1"
"1"," -1"
"1","
"
"1","[197]"
"1","  1"
"1","  1"
"1"," -1"
"1"," -1"
"1"," -1"
"1","  1"
"1","  1"
"1","  1"
"1"," -1"
"1"," -1"
"1"," -1"
"1","  1"
"1","  1"
"1","  1"
"1"," -1"
"1","  1"
"1"," -1"
"1","  1"
"1","  1"
"1"," -1"
"1"," -1"
"1","  1"
"1"," -1"
"1"," -1"
"1","  1"
"1","  1"
"1","  1"
"1"," -1"
"1"," -1"
"1","  1"
"1"," -1"
"1","  1"
"1","  1"
"1"," -1"
"1","  1"
"1","  1"
"1","  1"
"1","  1"
"1","  1"
"1","  1"
"1"," -1"
"1","  1"
"1","  1"
"1","  1"
"1","  1"
"1","  1"
"1","  1"
"1","  1"
"1","  1"
"1","
"
"1","[246]"
"1","  1"
"1","  1"
"1"," -1"
"1","  1"
"1","  1"
"1","
"
"0","test_accuracy(rbf.model, data[random.test.index, ], label[random.test.index])"
"1","[1]"
"1"," 0.8"
"1","
"
